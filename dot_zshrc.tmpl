ZSH="$HOME/.zsh"

### SSH Agent
{{- if eq .chezmoi.os "darwin" }}
YKCS_PROVIDER="/opt/homebrew/Cellar/yubico-piv-tool/2.4.2/lib"
YKCS_PATH="$YKCS_PROVIDER/libykcs11.dylib"
{{- else if eq .chezmoi.os "linux" }}
export LD_LIBRARY_PATH="/usr/local/lib"
YKCS_PROVIDER="/usr/local/lib"
YKCS_PATH="$YKCS_PROVIDER/libykcs11.so"
{{- end }}
if [ ! -S $HOME/.ssh/ssh_auth_sock ]; then
    # Allow providers from yubico-piv-tool to be able to use libykcs11.dylib
    eval $(ssh-agent -s -P "$YKCS_PROVIDER/*" | grep SSH_)
    ln -sf "$SSH_AUTH_SOCK" $HOME/.ssh/ssh_auth_sock
fi
export SSH_AUTH_SOCK=$HOME/.ssh/ssh_auth_sock

# Only add if not already loaded
ssh-add -l > /dev/null
if [[ "$?" == 1 ]]; then
    # Check if a YubiKey is detected
    ykman info &> /dev/null
    if [[ "$?" == 0 ]]; then
        # Add PIV card
        # NOTE: this will require the Yubikey pin when loading
        ssh-add -l > /dev/null || ssh-add -s "$YKCS_PATH"
    fi
fi

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

### PATH
PATH=$PATH:$HOME/go/bin:$HOME/.scripts:$HOME/.bin/flutter/bin
BUN_INSTALL="$HOME/.bun"
PATH="$BUN_INSTALL/bin:$PATH"

### Theming
source "$HOME/.zsh/themes/powerlevel10k/powerlevel10k.zsh-theme"
source "$ZSH/catppuccin_macchiato-zsh-syntax-highlighting.zsh"
export FZF_DEFAULT_OPTS=" \
--color=bg+:#363a4f,bg:#24273a,spinner:#f4dbd6,hl:#ed8796 \
--color=fg:#cad3f5,header:#ed8796,info:#c6a0f6,pointer:#f4dbd6 \
--color=marker:#f4dbd6,fg+:#cad3f5,prompt:#c6a0f6,hl+:#ed8796"

source "$ZSH/init.sh"

### Plugins and scripts 
plugins=(
    dirhistory
    fancy-ctrl-z
    git
    tmux
    zsh-syntax-highlighting
    zsh-autosuggestions
)

# Load all of the plugins that were defined in ~/.zshrc
for plugin ($plugins); do
if [[ -f "$ZSH/plugins/$plugin/$plugin.plugin.zsh" ]]; then
    source "$ZSH/plugins/$plugin/$plugin.plugin.zsh"
fi
done
unset plugin

# Load config files
for config_file ("$ZSH"/lib/*.zsh); do
  source "$config_file"
done

### TMUX Config
KUBE_TMUX_CLUSTER_FUNCTION=get_cluster_short

### Editor
if [[ -n $SSH_CONNECTION ]]; then
  EDITOR='vim'
else
  EDITOR='nvim'
fi

### History
# Avoid duplicates
HISTCONTROL=ignoredups:erasedups
PROMPT_COMMAND="history -a; history -n"

### Aliases
source $HOME/.aliases
if [[ -f $HOME/.aliases.work ]]; then
  source $HOME/.aliases.work
fi

### Completions
[[ $commands[kubectl] ]] && source <(kubectl completion zsh)
[ -s "$HOME/.bun/_bun" ] && source "$HOME/.bun/_bun"

ulimit -n 50240

{{ if eq .chezmoi.os "linux" }}
### Force wayland
QT_QPA_PLATFORMTHEME=qt5ct
QT_QPA_PLATFORM=wayland
GDK_BACKEND=wayland
MOZ_ENABLE_WAYLAND=1
{{ end}}

## Vim bindings
bindkey -v

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
